name: Create Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Version for the build to be released'
        required: true
      commitHash:
        description: 'Commit hash to be tagged for the release. Defaults to the latest commit on the master branch.'
      releaseMessage:
        description: "What's new in this release?"
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: generate release body
        run: |
          git config --global user.name "Greator"
          git config --global user.email "devops@greator.com"
          git checkout ${{ github.event.inputs.commitHash }}
          npx standard-version -i TEMP_CHANGELOG.md --header "${{ github.event.inputs.releaseMessage }}" --release-as ${{ github.event.inputs.releaseVersion }} --skip.commit --skip.tag
          git checkout master
      - name: create and push tag
        run: |
          git tag ${{ github.event.inputs.releaseVersion }} ${{ github.event.inputs.commitHash }}
          git push origin ${{ github.event.inputs.releaseVersion }}
      - name: create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ github.event.inputs.releaseVersion }}
          tag_name: ${{ github.event.inputs.releaseVersion }}
          body_path: TEMP_CHANGELOG.md
      - name: get new development version number
        id: calc_bump_version
        run: |
          MAJOR=$( echo ${{ github.event.inputs.releaseVersion }} | cut -d '.' -f 1 )
          MINOR=$( echo ${{ github.event.inputs.releaseVersion }} | cut -d '.' -f 2 )
          PATCH=$( echo ${{ github.event.inputs.releaseVersion }} | cut -d '.' -f 3 )
          NEW_PATCH=$(( $PATCH + 1 ))
          echo ::set-output name=bump_version::$(echo "${MAJOR}.${MINOR}.${NEW_PATCH}")
      - name: bump android version in bitrise config
        uses: jacobtomlinson/gha-find-replace@0.1.2
        with:
          find: "ANDROID_VERSION_NAME: .*"
          replace: "ANDROID_VERSION_NAME: '\"${{ steps.calc_bump_version.outputs.bump_version }}\"'"
          include: "bitrise.yml"
      - name: bump ios version in bitrise config
        uses: jacobtomlinson/gha-find-replace@0.1.2
        with:
          find: "IOS_VERSION_NUMBER: .*"
          replace: "IOS_VERSION_NUMBER: ${{ steps.calc_bump_version.outputs.bump_version }}"
          include: "bitrise.yml"
      - name: bump version in gradle.properties
        uses: jacobtomlinson/gha-find-replace@0.1.2
        with:
          find: "APP_VERSION_NUMBER=.*"
          replace: "APP_VERSION_NUMBER=${{ steps.calc_bump_version.outputs.bump_version }}"
          include: "android/gradle.properties"
      - name: bump marketing version iOS project file
        uses: jacobtomlinson/gha-find-replace@0.1.2
        with:
          find: "MARKETING_VERSION = .*;"
          replace: "MARKETING_VERSION = ${{ steps.calc_bump_version.outputs.bump_version }};"
          include: "ios/AppName.xcodeproj/project.pbxproj"
      - name: discard changelog
        run: |
          rm TEMP_CHANGELOG.md
      - name: create version bump PR
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "chore(release): bump version numbers post-release"
          title: "Bump version numbers after ${{ github.event.inputs.releaseVersion }} release"
          body: ":robot:: \"This PR updates the version numbers in the code as a result of the [${{ github.event.inputs.releaseVersion }} release](https://github.com/lpatino10/automated-release-testing/releases/tag/${{ github.event.inputs.releaseVersion }}).\""
          branch: post-release-version-bump
          base: master
